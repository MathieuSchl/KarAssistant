// Mocks generated by Mockito 5.4.2 from annotations
// in kar_assistant/test/kara_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:kar_assistant/core/models/conversation/message_conversation.dart'
    as _i5;
import 'package:kar_assistant/core/models/kara_response.dart' as _i3;
import 'package:kar_assistant/core/repository/kara_repo.dart' as _i2;
import 'package:kar_assistant/screens/home_page/controller/kara_controller.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeKaraRepo_0 extends _i1.SmartFake implements _i2.KaraRepo {
  _FakeKaraRepo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKaraResponse_1 extends _i1.SmartFake implements _i3.KaraResponse {
  _FakeKaraResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [KaraController].
///
/// See the documentation for Mockito's code generation for more information.
class MockKaraController extends _i1.Mock implements _i4.KaraController {
  @override
  _i2.KaraRepo get karaRepo => (super.noSuchMethod(
        Invocation.getter(#karaRepo),
        returnValue: _FakeKaraRepo_0(
          this,
          Invocation.getter(#karaRepo),
        ),
        returnValueForMissingStub: _FakeKaraRepo_0(
          this,
          Invocation.getter(#karaRepo),
        ),
      ) as _i2.KaraRepo);
  @override
  set karaLastResponse(_i3.KaraResponse? _karaLastResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #karaLastResponse,
          _karaLastResponse,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get lastWords => (super.noSuchMethod(
        Invocation.getter(#lastWords),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set lastWords(String? _lastWords) => super.noSuchMethod(
        Invocation.setter(
          #lastWords,
          _lastWords,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.MessageConversation> get listResponse => (super.noSuchMethod(
        Invocation.getter(#listResponse),
        returnValue: <_i5.MessageConversation>[],
        returnValueForMissingStub: <_i5.MessageConversation>[],
      ) as List<_i5.MessageConversation>);
  @override
  set listResponse(List<_i5.MessageConversation>? _listResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #listResponse,
          _listResponse,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i3.KaraResponse> askedKara(String? text) => (super.noSuchMethod(
        Invocation.method(
          #askedKara,
          [text],
        ),
        returnValue: _i6.Future<_i3.KaraResponse>.value(_FakeKaraResponse_1(
          this,
          Invocation.method(
            #askedKara,
            [text],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.KaraResponse>.value(_FakeKaraResponse_1(
          this,
          Invocation.method(
            #askedKara,
            [text],
          ),
        )),
      ) as _i6.Future<_i3.KaraResponse>);
  @override
  bool verifIsToken() => (super.noSuchMethod(
        Invocation.method(
          #verifIsToken,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [KaraResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockKaraResponse extends _i1.Mock implements _i3.KaraResponse {
  @override
  String get result => (super.noSuchMethod(
        Invocation.getter(#result),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set result(String? _result) => super.noSuchMethod(
        Invocation.setter(
          #result,
          _result,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set language(String? _language) => super.noSuchMethod(
        Invocation.setter(
          #language,
          _language,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set skill(String? _skill) => super.noSuchMethod(
        Invocation.setter(
          #skill,
          _skill,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get similarity => (super.noSuchMethod(
        Invocation.getter(#similarity),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  set similarity(double? _similarity) => super.noSuchMethod(
        Invocation.setter(
          #similarity,
          _similarity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get bestPhrase => (super.noSuchMethod(
        Invocation.getter(#bestPhrase),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set bestPhrase(String? _bestPhrase) => super.noSuchMethod(
        Invocation.setter(
          #bestPhrase,
          _bestPhrase,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set convToken(String? _convToken) => super.noSuchMethod(
        Invocation.setter(
          #convToken,
          _convToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userToken(String? _userToken) => super.noSuchMethod(
        Invocation.setter(
          #userToken,
          _userToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
